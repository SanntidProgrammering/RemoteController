/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package remotecontroller;

import java.awt.Color;
//import java.awt.GraphicsEnvironment;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.Observable;
import java.util.Observer;
//import org.opencv.core.Core;
import java.util.Timer;
import javax.swing.JFrame;
//import java.util.logging.Level;
//import java.util.logging.Logger;

/**
 *
 * @author Magnus Gribbestad
 */
public class GUI extends javax.swing.JFrame implements KeyListener, Observer { // implement Observer

    private CameraThread myThread;
    private Thread t; 
    private GUIController controller;
    private boolean fwd,left,rev,right,leftServo,rightServo;
    private int sens;
    private Timer fTimer;
    private JFrame debuggerFrame;
 
    public GUI(GUIController controller) {
        initComponents();

        this.controller = controller;
        
        // Creates a new timer. Used for requesting data from arduino.
        this.fTimer = new Timer();
        // Setup timer, schedule request rate
        this.setupTimerSchedule(controller, 0, 500);
        // Set initial focusable parameters, important for keylistener.
        this.setupFocusable(); 
        // Set the sens slider boundaries and initial values.
        this.setupSensSlider();
        // Sets inital states/modes. System off and manual mode as default.
        this.setInitialStates();
        
        this.setup();
        this.setupDebugger();
        this.setInitValues();
        // Set keylistener to this GUI/Frame.
        addKeyListener(this);
        // Sets different color layout.
        //this.colorSetup();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PIDpanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        paramILabel = new javax.swing.JLabel();
        paramPLabel = new javax.swing.JLabel();
        paramDLabel = new javax.swing.JLabel();
        paramssLabel = new javax.swing.JLabel();
        ssSlider = new javax.swing.JSlider();
        pSlider = new javax.swing.JSlider();
        iSlider = new javax.swing.JSlider();
        dSlider = new javax.swing.JSlider();
        paramffLabel = new javax.swing.JLabel();
        ffSlider = new javax.swing.JSlider();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        ffLabel = new javax.swing.JLabel();
        ssLabel = new javax.swing.JLabel();
        pidButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        mainPanel = new javax.swing.JPanel();
        leftPanel = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        cameraPanel = new javax.swing.JPanel();
        rightPanel = new javax.swing.JPanel();
        rightLowPanel = new javax.swing.JPanel();
        controlPanel = new javax.swing.JPanel();
        rightButton = new javax.swing.JButton();
        leftButton = new javax.swing.JButton();
        revButton = new javax.swing.JButton();
        fwdButton = new javax.swing.JButton();
        rightCenPanel = new javax.swing.JPanel();
        inputPanel = new javax.swing.JPanel();
        xNameLabel = new javax.swing.JLabel();
        yNameLabel = new javax.swing.JLabel();
        distanceNameLabel = new javax.swing.JLabel();
        xCoordLabel = new javax.swing.JLabel();
        yCoordLabel = new javax.swing.JLabel();
        distanceLabel = new javax.swing.JLabel();
        inputPanel1 = new javax.swing.JPanel();
        lServoWarn = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        rServoWarn = new javax.swing.JLabel();
        rightTopPanel = new javax.swing.JPanel();
        setupPanel = new javax.swing.JPanel();
        sensLabel = new javax.swing.JLabel();
        sensSlider = new javax.swing.JSlider();
        sensPercentLabel = new javax.swing.JLabel();
        modeToggleButton = new javax.swing.JToggleButton();
        startToggle = new javax.swing.JToggleButton();
        radioAuto = new javax.swing.JRadioButton();
        radioMan = new javax.swing.JRadioButton();
        powerIcon = new javax.swing.JLabel();
        slideAuto = new javax.swing.JLabel();
        slideMan = new javax.swing.JLabel();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "PID Adjuster", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 3, 24))); // NOI18N

        paramILabel.setText("0.00");

        paramPLabel.setText("0.00");

        paramDLabel.setText("0.00");

        paramssLabel.setText("0.00");

        ssSlider.setMaximum(250);
        ssSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ssSliderStateChanged(evt);
            }
        });

        pSlider.setMaximum(250);
        pSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                pSliderStateChanged(evt);
            }
        });

        iSlider.setMaximum(250);
        iSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                iSliderStateChanged(evt);
            }
        });

        dSlider.setMaximum(250);
        dSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                dSliderStateChanged(evt);
            }
        });

        paramffLabel.setText("0.00");

        ffSlider.setMaximum(250);
        ffSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ffSliderStateChanged(evt);
            }
        });

        jLabel6.setText("Proportional:");

        jLabel1.setText("Integral:");

        jLabel5.setText("Derivative:");

        ffLabel.setText("Feed forward:");

        ssLabel.setText("Something:");

        pidButton.setText("Set values:");
        pidButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                pidButtonMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5)
                    .addComponent(ffLabel)
                    .addComponent(ssLabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pidButton, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(iSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ffSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ssSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(paramPLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(paramILabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(paramDLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(paramffLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(paramssLabel, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap(65, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(paramPLabel)
                        .addGap(6, 6, 6)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(iSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(paramILabel))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(paramDLabel)
                    .addComponent(dSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ffSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ffLabel)
                    .addComponent(paramffLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ssSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ssLabel)
                    .addComponent(paramssLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pidButton)
                .addContainerGap())
        );

        javax.swing.GroupLayout PIDpanelLayout = new javax.swing.GroupLayout(PIDpanel);
        PIDpanel.setLayout(PIDpanelLayout);
        PIDpanelLayout.setHorizontalGroup(
            PIDpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PIDpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        PIDpanelLayout.setVerticalGroup(
            PIDpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Video stream:", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Swis721 LtEx BT", 0, 18))); // NOI18N

        javax.swing.GroupLayout cameraPanelLayout = new javax.swing.GroupLayout(cameraPanel);
        cameraPanel.setLayout(cameraPanelLayout);
        cameraPanelLayout.setHorizontalGroup(
            cameraPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 717, Short.MAX_VALUE)
        );
        cameraPanelLayout.setVerticalGroup(
            cameraPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 624, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cameraPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cameraPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout leftPanelLayout = new javax.swing.GroupLayout(leftPanel);
        leftPanel.setLayout(leftPanelLayout);
        leftPanelLayout.setHorizontalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        leftPanelLayout.setVerticalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );

        controlPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Controls:", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Swis721 LtEx BT", 0, 18))); // NOI18N
        controlPanel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        rightButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/remotecontroller/icons/right.png"))); // NOI18N
        rightButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                rightButtonKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                rightButtonKeyReleased(evt);
            }
        });

        leftButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/remotecontroller/icons/left.png"))); // NOI18N
        leftButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                leftButtonKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                leftButtonKeyReleased(evt);
            }
        });

        revButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/remotecontroller/icons/down.png"))); // NOI18N
        revButton.setToolTipText("");
        revButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                revButtonKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                revButtonKeyReleased(evt);
            }
        });

        fwdButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/remotecontroller/icons/up.png"))); // NOI18N
        fwdButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fwdButtonKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fwdButtonKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout controlPanelLayout = new javax.swing.GroupLayout(controlPanel);
        controlPanel.setLayout(controlPanelLayout);
        controlPanelLayout.setHorizontalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlPanelLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(leftButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(revButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fwdButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(rightButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        controlPanelLayout.setVerticalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, controlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fwdButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(revButton, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(leftButton)
                    .addComponent(rightButton))
                .addContainerGap())
        );

        javax.swing.GroupLayout rightLowPanelLayout = new javax.swing.GroupLayout(rightLowPanel);
        rightLowPanel.setLayout(rightLowPanelLayout);
        rightLowPanelLayout.setHorizontalGroup(
            rightLowPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(controlPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        rightLowPanelLayout.setVerticalGroup(
            rightLowPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rightLowPanelLayout.createSequentialGroup()
                .addComponent(controlPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 60, Short.MAX_VALUE))
        );

        inputPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Inputs:", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Swis721 LtEx BT", 0, 18))); // NOI18N

        xNameLabel.setFont(new java.awt.Font("Swis721 LtEx BT", 0, 13)); // NOI18N
        xNameLabel.setText("X-coordinate:");

        yNameLabel.setFont(new java.awt.Font("Swis721 LtEx BT", 0, 13)); // NOI18N
        yNameLabel.setText("Y-coordinate:");

        distanceNameLabel.setFont(new java.awt.Font("Swis721 LtEx BT", 0, 13)); // NOI18N
        distanceNameLabel.setText("Distance:");

        xCoordLabel.setFont(new java.awt.Font("Swis721 LtEx BT", 0, 13)); // NOI18N
        xCoordLabel.setText("No Object found");

        yCoordLabel.setFont(new java.awt.Font("Swis721 LtEx BT", 0, 13)); // NOI18N
        yCoordLabel.setText("No Object found");

        distanceLabel.setFont(new java.awt.Font("Swis721 LtEx BT", 0, 13)); // NOI18N
        distanceLabel.setText("No Object found");

        javax.swing.GroupLayout inputPanelLayout = new javax.swing.GroupLayout(inputPanel);
        inputPanel.setLayout(inputPanelLayout);
        inputPanelLayout.setHorizontalGroup(
            inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(xNameLabel)
                    .addComponent(distanceNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yNameLabel))
                .addGap(30, 30, 30)
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(distanceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yCoordLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(xCoordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        inputPanelLayout.setVerticalGroup(
            inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputPanelLayout.createSequentialGroup()
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(xNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(xCoordLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(yNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(yCoordLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(distanceNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(distanceLabel))
                .addContainerGap())
        );

        inputPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Servo:", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Swis721 LtEx BT", 0, 18))); // NOI18N

        lServoWarn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/remotecontroller/icons/warning_icon.png"))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Swis721 LtEx BT", 0, 13)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Hit:");

        jLabel4.setFont(new java.awt.Font("Swis721 LtEx BT", 0, 13)); // NOI18N
        jLabel4.setText("Catch:");

        rServoWarn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/remotecontroller/icons/warning_icon.png"))); // NOI18N

        javax.swing.GroupLayout inputPanel1Layout = new javax.swing.GroupLayout(inputPanel1);
        inputPanel1.setLayout(inputPanel1Layout);
        inputPanel1Layout.setHorizontalGroup(
            inputPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inputPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(inputPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lServoWarn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(inputPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rServoWarn)
                    .addComponent(jLabel4))
                .addContainerGap())
        );
        inputPanel1Layout.setVerticalGroup(
            inputPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputPanel1Layout.createSequentialGroup()
                .addGroup(inputPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inputPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lServoWarn))
                    .addGroup(inputPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rServoWarn)))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout rightCenPanelLayout = new javax.swing.GroupLayout(rightCenPanel);
        rightCenPanel.setLayout(rightCenPanelLayout);
        rightCenPanelLayout.setHorizontalGroup(
            rightCenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rightCenPanelLayout.createSequentialGroup()
                .addComponent(inputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(inputPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        rightCenPanelLayout.setVerticalGroup(
            rightCenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rightCenPanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(rightCenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inputPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(inputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        setupPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Setup:", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Swis721 LtEx BT", 0, 18))); // NOI18N

        sensLabel.setFont(new java.awt.Font("Swis721 LtEx BT", 0, 13)); // NOI18N
        sensLabel.setText("Sensitivity:");

        sensSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sensSliderStateChanged(evt);
            }
        });
        sensSlider.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                sensSliderMouseReleased(evt);
            }
        });

        sensPercentLabel.setFont(new java.awt.Font("Swis721 LtEx BT", 0, 13)); // NOI18N
        sensPercentLabel.setText("100%");

        modeToggleButton.setFont(new java.awt.Font("Swis721 LtEx BT", 0, 13)); // NOI18N
        modeToggleButton.setText("Change mode");
        modeToggleButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                modeToggleButtonMouseClicked(evt);
            }
        });

        startToggle.setFont(new java.awt.Font("Swis721 LtEx BT", 0, 13)); // NOI18N
        startToggle.setText("Start system");
        startToggle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                startToggleMouseClicked(evt);
            }
        });

        radioAuto.setFont(new java.awt.Font("Swis721 LtEx BT", 0, 13)); // NOI18N
        radioAuto.setText("Auto mode");
        radioAuto.setEnabled(false);
        radioAuto.setRolloverEnabled(false);

        radioMan.setFont(new java.awt.Font("Swis721 LtEx BT", 0, 13)); // NOI18N
        radioMan.setText("Manual mode");
        radioMan.setEnabled(false);
        radioMan.setOpaque(false);
        radioMan.setRolloverEnabled(false);

        powerIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/remotecontroller/icons/power_on.png"))); // NOI18N

        slideAuto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/remotecontroller/of_slide.png"))); // NOI18N

        slideMan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/remotecontroller/on_slide.png"))); // NOI18N

        javax.swing.GroupLayout setupPanelLayout = new javax.swing.GroupLayout(setupPanel);
        setupPanel.setLayout(setupPanelLayout);
        setupPanelLayout.setHorizontalGroup(
            setupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(setupPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(setupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(setupPanelLayout.createSequentialGroup()
                        .addGroup(setupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, setupPanelLayout.createSequentialGroup()
                                .addComponent(sensLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sensSlider, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sensPercentLabel))
                            .addGroup(setupPanelLayout.createSequentialGroup()
                                .addComponent(modeToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(setupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(setupPanelLayout.createSequentialGroup()
                                        .addComponent(radioMan)
                                        .addGap(18, 18, 18)
                                        .addComponent(slideMan))
                                    .addGroup(setupPanelLayout.createSequentialGroup()
                                        .addComponent(radioAuto)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(slideAuto)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(setupPanelLayout.createSequentialGroup()
                        .addComponent(startToggle, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(powerIcon)
                        .addGap(62, 62, 62))))
        );
        setupPanelLayout.setVerticalGroup(
            setupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(setupPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(setupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(startToggle, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(powerIcon))
                .addGap(27, 27, 27)
                .addGroup(setupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(sensPercentLabel)
                    .addGroup(setupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(sensSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(sensLabel)))
                .addGap(18, 18, 18)
                .addGroup(setupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(modeToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(setupPanelLayout.createSequentialGroup()
                        .addGroup(setupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radioAuto)
                            .addComponent(slideAuto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(setupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radioMan)
                            .addComponent(slideMan, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(8, 8, 8))
        );

        javax.swing.GroupLayout rightTopPanelLayout = new javax.swing.GroupLayout(rightTopPanel);
        rightTopPanel.setLayout(rightTopPanelLayout);
        rightTopPanelLayout.setHorizontalGroup(
            rightTopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(setupPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        rightTopPanelLayout.setVerticalGroup(
            rightTopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rightTopPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(setupPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout rightPanelLayout = new javax.swing.GroupLayout(rightPanel);
        rightPanel.setLayout(rightPanelLayout);
        rightPanelLayout.setHorizontalGroup(
            rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rightLowPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(rightTopPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(rightCenPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        rightPanelLayout.setVerticalGroup(
            rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rightPanelLayout.createSequentialGroup()
                .addComponent(rightTopPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rightCenPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(rightLowPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(leftPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(rightPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rightPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(leftPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 693, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * Overrided mathod from observer. Updated the fields of the GUI.
     * 
     * @param o Observable object
     * @param arg Arguments..
     */
    @Override
    public void update(Observable o, Object arg) {
        if (o instanceof ReceiveDataObservable){
           ReceiveDataObservable receive = (ReceiveDataObservable) o;
           int distance = receive.getDistance();
           float eAx = receive.getErrorAngleX()/100;
           float eAy = receive.getErrorAngleY()/100;
           
           this.distanceLabel.setText("" + distance);
           if (eAx == 255 || eAx == -255){
               this.xCoordLabel.setText("No object found");
               this.yCoordLabel.setText("No object found");
           }
           else{
               this.xCoordLabel.setText("" + eAx);
               this.yCoordLabel.setText("" + eAy);
               System.out.println("Fields updated");
           }  
        }
        else{
        System.out.println("Not instance of DH");
        }
    }
    
    
    private void startToggleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startToggleMouseClicked
        if(this.startToggle.isSelected()){
            this.controller.setStart(true);
            this.startToggle.setText("Stop system");
            this.powerIcon.setEnabled(true);
            this.cameraSetup();
        }
        else{
            this.controller.setStart(false);
            this.startToggle.setText("Start system");
            this.powerIcon.setEnabled(false);
            this.stopCamera();
        }
    }//GEN-LAST:event_startToggleMouseClicked

    private void modeToggleButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_modeToggleButtonMouseClicked
        if(this.modeToggleButton.isSelected()){
            this.controller.setAuto(true);
            this.radioAuto.setSelected(true);
            this.radioMan.setSelected(false);
            slideAuto.setIcon(new javax.swing.ImageIcon(getClass().getResource("on_slide.png")));
            slideMan.setIcon(new javax.swing.ImageIcon(getClass().getResource("of_slide.png")));
        }
        else{
            this.controller.setAuto(false);
            this.radioAuto.setSelected(false);
            this.radioMan.setSelected(true);
            slideAuto.setIcon(new javax.swing.ImageIcon(getClass().getResource("of_slide.png")));
            slideMan.setIcon(new javax.swing.ImageIcon(getClass().getResource("on_slide.png")));

        }
    }//GEN-LAST:event_modeToggleButtonMouseClicked

    private void sensSliderMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sensSliderMouseReleased
        this.sens = this.sensSlider.getValue();
        this.controller.setSens(this.sens);
        this.sensPercentLabel.setText(""+this.sens+"%");
    }//GEN-LAST:event_sensSliderMouseReleased

    private void sensSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sensSliderStateChanged
        //this.sens = this.sensSlider.getValue();
        //this.controller.setSens(this.sens);
        //this.sensPercentLabel.setText(""+this.sens+"%");

    }//GEN-LAST:event_sensSliderStateChanged

    private void fwdButtonKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fwdButtonKeyReleased
        //this.fwdButton.setBackground(null);
        this.fwdButton.setEnabled(false);
        this.controller.setFwd(false);
        this.fwd = false;
    }//GEN-LAST:event_fwdButtonKeyReleased

    
    private void fwdButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fwdButtonKeyPressed
        //this.fwdButton.setBackground(Color.green);
        this.fwdButton.setEnabled(true);
        if(!this.fwd){
            this.controller.setFwd(true);
            this.fwd = true;
        }
    }//GEN-LAST:event_fwdButtonKeyPressed

    private void revButtonKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_revButtonKeyReleased
        //this.revButton.setBackground(null);
        this.revButton.setEnabled(false);
        this.controller.setRev(false);
        this.rev = false;
    }//GEN-LAST:event_revButtonKeyReleased

    private void revButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_revButtonKeyPressed
        //this.revButton.setBackground(Color.green);
        this.revButton.setEnabled(true);
        if(!this.rev){
            this.controller.setRev(true);
            this.rev = true;
        }
    }//GEN-LAST:event_revButtonKeyPressed

    private void leftButtonKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_leftButtonKeyReleased
        //this.leftButton.setBackground(null);
        this.leftButton.setEnabled(false);
        this.controller.setLeft(false);
        this.left = false;
    }//GEN-LAST:event_leftButtonKeyReleased

    private void leftButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_leftButtonKeyPressed
        //this.leftButton.setBackground(Color.green);
        this.leftButton.setEnabled(true);
        if(!this.left){
            this.controller.setLeft(true);
            this.left = true;
        }
    }//GEN-LAST:event_leftButtonKeyPressed

    private void rightButtonKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rightButtonKeyReleased
        //this.rightButton.setBackground(null);
        this.rightButton.setEnabled(false);
        this.controller.setRight(false);
        this.right = false;
    }//GEN-LAST:event_rightButtonKeyReleased

    private void rightButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rightButtonKeyPressed
        // this.rightButton.setBackground(Color.green);
        this.rightButton.setEnabled(true);
        if(!this.right){
            this.controller.setRight(true);
            this.right = true;
        }
    }//GEN-LAST:event_rightButtonKeyPressed

    private void pSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_pSliderStateChanged
        float tmp_value = ((float)this.pSlider.getValue())/10;
        this.paramPLabel.setText("" + tmp_value);
    }//GEN-LAST:event_pSliderStateChanged

    private void iSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_iSliderStateChanged
        float tmp_value = ((float)this.iSlider.getValue())/10;
        this.paramILabel.setText("" + tmp_value);
    }//GEN-LAST:event_iSliderStateChanged

    private void dSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_dSliderStateChanged
        float tmp_value = ((float)this.dSlider.getValue())/10;
        this.paramDLabel.setText("" + tmp_value);
    }//GEN-LAST:event_dSliderStateChanged

    private void ffSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ffSliderStateChanged
        float tmp_value = ((float)this.ffSlider.getValue())/10;
        this.paramffLabel.setText("" + tmp_value);
    }//GEN-LAST:event_ffSliderStateChanged

    private void ssSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ssSliderStateChanged
        float tmp_value = ((float)this.ssSlider.getValue())/10;
        this.paramssLabel.setText("" + tmp_value);
    }//GEN-LAST:event_ssSliderStateChanged

    private void pidButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pidButtonMouseReleased
        int[] pidParams = new int[5];
        pidParams[0] = this.pSlider.getValue();
        pidParams[1] = this.iSlider.getValue();
        pidParams[2] = this.dSlider.getValue();
        pidParams[3] = this.ffSlider.getValue();
        pidParams[4] = this.ssSlider.getValue();
        
        this.controller.setPidParams(pidParams);

    }//GEN-LAST:event_pidButtonMouseReleased

    
      private void leftServoButtonKeyReleased(java.awt.event.KeyEvent evt) {                                            
      //  this.leftServoButton.setBackground(null);
        this.lServoWarn.setEnabled(false);
        this.controller.setLeftServo(false);
        this.leftServo = false;
    }                                           

    private void leftServoButtonKeyPressed(java.awt.event.KeyEvent evt) {                                           
      //  this.leftServoButton.setBackground(Color.green);
        this.lServoWarn.setEnabled(true);
        if(!this.leftServo){
            this.controller.setLeftServo(true);
            this.leftServo = true;
        }
    }       
    
      private void rightServoButtonKeyReleased(java.awt.event.KeyEvent evt) {                                             
       // this.rightServoButton.setBackground(null);
        this.rServoWarn.setEnabled(false);
        this.controller.setRightServo(false);
        this.rightServo = false;
    }                                            

    private void rightServoButtonKeyPressed(java.awt.event.KeyEvent evt) {                                            
       // this.rightServoButton.setBackground(Color.green);
        this.rServoWarn.setEnabled(true);
        if(!this.rightServo){
            this.controller.setRightServo(true);
            this.rightServo = true;
        }
    }      

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PIDpanel;
    private javax.swing.JPanel cameraPanel;
    private javax.swing.JPanel controlPanel;
    private javax.swing.JSlider dSlider;
    private javax.swing.JLabel distanceLabel;
    private javax.swing.JLabel distanceNameLabel;
    private javax.swing.JLabel ffLabel;
    private javax.swing.JSlider ffSlider;
    private javax.swing.JButton fwdButton;
    private javax.swing.JSlider iSlider;
    private javax.swing.JPanel inputPanel;
    private javax.swing.JPanel inputPanel1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel lServoWarn;
    private javax.swing.JButton leftButton;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JToggleButton modeToggleButton;
    private javax.swing.JSlider pSlider;
    private javax.swing.JLabel paramDLabel;
    private javax.swing.JLabel paramILabel;
    private javax.swing.JLabel paramPLabel;
    private javax.swing.JLabel paramffLabel;
    private javax.swing.JLabel paramssLabel;
    private javax.swing.JButton pidButton;
    private javax.swing.JLabel powerIcon;
    private javax.swing.JLabel rServoWarn;
    private javax.swing.JRadioButton radioAuto;
    private javax.swing.JRadioButton radioMan;
    private javax.swing.JButton revButton;
    private javax.swing.JButton rightButton;
    private javax.swing.JPanel rightCenPanel;
    private javax.swing.JPanel rightLowPanel;
    private javax.swing.JPanel rightPanel;
    private javax.swing.JPanel rightTopPanel;
    private javax.swing.JLabel sensLabel;
    private javax.swing.JLabel sensPercentLabel;
    private javax.swing.JSlider sensSlider;
    private javax.swing.JPanel setupPanel;
    private javax.swing.JLabel slideAuto;
    private javax.swing.JLabel slideMan;
    private javax.swing.JLabel ssLabel;
    private javax.swing.JSlider ssSlider;
    private javax.swing.JToggleButton startToggle;
    private javax.swing.JLabel xCoordLabel;
    private javax.swing.JLabel xNameLabel;
    private javax.swing.JLabel yCoordLabel;
    private javax.swing.JLabel yNameLabel;
    // End of variables declaration//GEN-END:variables

    @Override
    public void keyTyped(KeyEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void keyPressed(KeyEvent e) {
        int code = e.getKeyCode();

            if (code == KeyEvent.VK_DOWN) {
       
                this.revButtonKeyPressed(e);
             
            }
            if (code == KeyEvent.VK_UP) {
    
                this.fwdButtonKeyPressed(e);
     
            }
            if (code == KeyEvent.VK_LEFT) {
                this.leftButtonKeyPressed(e);
    
            }
            if (code == KeyEvent.VK_RIGHT) {
                this.rightButtonKeyPressed(e);

            }
            if (code == KeyEvent.VK_A) {
                this.leftServoButtonKeyPressed(e);

 
            }
            if (code == KeyEvent.VK_D) {
                this.rightServoButtonKeyPressed(e);
            }
            if (code == KeyEvent.VK_S) {
                debuggerFrame.setVisible(true);
            }
    }

    @Override
    public void keyReleased(KeyEvent e) {
         int code = e.getKeyCode();

            if (code == KeyEvent.VK_DOWN) {
                this.revButtonKeyReleased(e);
                
            }
            if (code == KeyEvent.VK_UP) {
                this.fwdButtonKeyReleased(e);
                
            }
            if (code == KeyEvent.VK_LEFT) {
                this.leftButtonKeyReleased(e);
                
            }
            if (code == KeyEvent.VK_RIGHT) {
                this.rightButtonKeyReleased(e);
                
            }
            if (code == KeyEvent.VK_A) {
                this.leftServoButtonKeyReleased(e);
              
            }
            if (code == KeyEvent.VK_D) {
                this.rightServoButtonKeyReleased(e);  
            }
    }
    
    public void setInitValues(){
        this.controller.setSens(sens);
    }
        
    public void setup(){
        fwdButton.setEnabled(false);
        revButton.setEnabled(false);
        leftButton.setEnabled(false);
        rightButton.setEnabled(false);
        this.radioMan.setEnabled(false);
        this.powerIcon.setEnabled(false);
        lServoWarn.setEnabled(false);
        rServoWarn.setEnabled(false); 
        slideAuto.setEnabled(true);
        
        
    }
    
    public void setupTimerSchedule(GUIController controller, int startTime, int runRate){
        this.fTimer.scheduleAtFixedRate(controller, startTime, runRate);
    }
    
    
    public void setupFocusable(){
        setFocusable(true);
        setFocusTraversalKeysEnabled(false);
        fwdButton.setFocusable(false);
        revButton.setFocusable(false);
        leftButton.setFocusable(false);
        rightButton.setFocusable(false);
        this.radioMan.setFocusable(false);
        this.powerIcon.setFocusable(false);
        lServoWarn.setFocusable(false);
        startToggle.setFocusable(false);
        modeToggleButton.setFocusable(false);
        sensSlider.setFocusable(false);
    }
    
    public void setupSensSlider(){
        this.sens = 50;
        this.sensSlider.setMinimum(0);
        this.sensSlider.setMaximum(100); 
        this.sensSlider.setValue(this.sens);
        this.sensPercentLabel.setText(""+this.sens+"%");
        
    }
    
    // Sets the inital modes/states of the system.
    public void setInitialStates(){        
        this.radioMan.setSelected(true);    
    }
    
    private void colorSetup(){
        Color color2 = Color.GRAY;
        Color color = Color.LIGHT_GRAY;
        this.setBackground(color);
        this.mainPanel.setBackground(color);
        this.leftPanel.setBackground(color);
        this.rightPanel.setBackground(color);
        this.rightCenPanel.setBackground(color);
        this.rightLowPanel.setBackground(color);
        this.rightTopPanel.setBackground(color);
        this.inputPanel.setBackground(color);
        this.controlPanel.setBackground(color);
        this.setupPanel.setBackground(color);
        this.cameraPanel.setBackground(color);
        this.jPanel4.setBackground(color);
    }
    
    private void cameraSetup(){
        if (myThread == null){
           myThread = new CameraThread(cameraPanel);
           t = new Thread(myThread);
           t.setDaemon(true);
           myThread.setRunnable(true);
           t.start();
        }
        else{
            myThread.setRunnable(true);
        }
    }
    
        private void stopCamera(){
           if(myThread != null){
              myThread.setRunnable(false);
           }            
        }
        
        private  void setupDebugger(){
            this.debuggerFrame =  new JFrame();
            this.debuggerFrame.setSize(550, 275);
            this.debuggerFrame.add(PIDpanel);
        }
    
        
}
